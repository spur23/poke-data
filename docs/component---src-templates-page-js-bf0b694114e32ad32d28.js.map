{"version":3,"sources":["webpack:///./src/utils/index.js","webpack:///./src/templates/Page.js"],"names":["capitalizeFirstLetter","str","charAt","toUpperCase","slice","Container","ParentContainer","DataContainer","PageTemplate","data","console","log","name","allIndvpokemon","edges","node","evolvesFrom","evolves_from_species","types","abilities","habitat","pokeId","allPokemon","nodes","filter","el","image","allImageSharp","parent","id","flavorText","flavor_text_entries","number","Math","floor","random","css","fluid","className","flavor_text","to","map","type","key","ability","query"],"mappings":"6FAAO,SAASA,EAAsBC,GACpC,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GADjD,mC,kCCAA,gIAOMC,EAAS,kFASTC,EAAe,qKAYfC,EAAa,uMAsEJC,UAtDf,YAAiC,IAATC,EAAQ,EAARA,KACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EAAKI,eAAeC,MAAM,GAAGC,KAAKH,KACzCI,EAAcP,EAAKI,eAAeC,MAAM,GAAGC,KAAKE,qBAChDC,EAAQT,EAAKI,eAAeC,MAAM,GAAGC,KAAKG,MAC1CC,EAAYV,EAAKI,eAAeC,MAAM,GAAGC,KAAKI,UAC9CC,EAAUX,EAAKI,eAAeC,MAAM,GAAGC,KAAKK,QAC5CC,EAASZ,EAAKa,WAAWC,MAAMC,QAAO,SAACC,GAAD,OAAQA,EAAGb,OAASA,KAC1Dc,EAAQjB,EAAKkB,cAAcJ,MAAMC,QACrC,SAACC,GAAD,OAAQA,EAAGG,OAAOhB,OAASS,EAAO,GAAGQ,MAEjCC,EAAarB,EAAKI,eAAeC,MAAM,GAAGC,KAAKgB,oBAC/CC,EAASC,KAAKC,MAAsB,EAAhBD,KAAKE,UAE/B,OACE,YAAC,IAAD,KACE,mBAAKC,IAAK9B,GACR,+BAAWN,YAAsBY,IACjC,mBAAKwB,IAAK/B,GACR,YAAC,IAAD,CAAKgC,MAAOX,EAAM,GAAGW,MAAOC,UAAU,eACtC,qCACA,qBAAIR,EAAWE,GAAQO,cAEzB,sCACgB,IACZvB,EAGA,YAAC,IAAD,CAAMwB,GAAE,IAAMxB,EAAYJ,MACvBZ,YAAsBgB,EAAYJ,OAHrC,QAOJ,mBAAKwB,IAAK7B,GACR,8BACCW,EAAMuB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,iBAAGC,IAAKD,EAAK9B,MAAOZ,YAAsB0C,EAAK9B,WAGnD,mBAAKwB,IAAK7B,GACR,mCACCY,EAAUsB,KAAI,gBAAGG,EAAH,EAAGA,QAAH,OACb,iBAAGD,IAAKC,EAAQhC,MAAOZ,YAAsB4C,EAAQhC,WAGzD,mBAAKwB,IAAK7B,GACR,iCACA,qBAAIP,YAAsBoB,QAS7B,IAAMyB,EAAK","file":"component---src-templates-page-js-bf0b694114e32ad32d28.js","sourcesContent":["export function capitalizeFirstLetter(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n","import React from \"react\";\r\nimport Img from \"gatsby-image\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport { capitalizeFirstLetter } from \"../utils/index\";\r\nimport { css } from \"@emotion/core\";\r\n\r\nconst Container = css`\r\n  width: 20rem;\r\n  align-self: center;\r\n  & h4,\r\n  p {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst ParentContainer = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  justify-content: center;\r\n  align-self: center;\r\n  text-align: center;\r\n  & h3 {\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nconst DataContainer = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  & p {\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n  & h4 {\r\n    margin-top: 1rem;\r\n    margin-bottom: 0.1rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nfunction PageTemplate({ data }) {\r\n  console.log(data);\r\n  const name = data.allIndvpokemon.edges[0].node.name;\r\n  const evolvesFrom = data.allIndvpokemon.edges[0].node.evolves_from_species;\r\n  const types = data.allIndvpokemon.edges[0].node.types;\r\n  const abilities = data.allIndvpokemon.edges[0].node.abilities;\r\n  const habitat = data.allIndvpokemon.edges[0].node.habitat;\r\n  const pokeId = data.allPokemon.nodes.filter((el) => el.name === name);\r\n  const image = data.allImageSharp.nodes.filter(\r\n    (el) => el.parent.name === pokeId[0].id\r\n  );\r\n  const flavorText = data.allIndvpokemon.edges[0].node.flavor_text_entries;\r\n  const number = Math.floor(Math.random() * 2);\r\n\r\n  return (\r\n    <Layout>\r\n      <div css={ParentContainer}>\r\n        <h3>Name: {capitalizeFirstLetter(name)}</h3>\r\n        <div css={Container}>\r\n          <Img fluid={image[0].fluid} className=\"poke-image\" />\r\n          <h4>Description</h4>\r\n          <p>{flavorText[number].flavor_text}</p>\r\n        </div>\r\n        <h4>\r\n          Evolves from:{\" \"}\r\n          {!evolvesFrom ? (\r\n            \"None\"\r\n          ) : (\r\n            <Link to={`/${evolvesFrom.name}`}>\r\n              {capitalizeFirstLetter(evolvesFrom.name)}\r\n            </Link>\r\n          )}\r\n        </h4>\r\n        <div css={DataContainer}>\r\n          <h4>Type</h4>\r\n          {types.map(({ type }) => (\r\n            <p key={type.name}>{capitalizeFirstLetter(type.name)}</p>\r\n          ))}\r\n        </div>\r\n        <div css={DataContainer}>\r\n          <h4>Abilities</h4>\r\n          {abilities.map(({ ability }) => (\r\n            <p key={ability.name}>{capitalizeFirstLetter(ability.name)}</p>\r\n          ))}\r\n        </div>\r\n        <div css={DataContainer}>\r\n          <h4>Habitat</h4>\r\n          <p>{capitalizeFirstLetter(habitat)}</p>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PageTemplate;\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allIndvpokemon(filter: { name: { eq: $slug } }) {\r\n      edges {\r\n        node {\r\n          name\r\n          abilities {\r\n            ability {\r\n              name\r\n            }\r\n          }\r\n          types {\r\n            type {\r\n              name\r\n            }\r\n          }\r\n          evolves_from_species {\r\n            name\r\n          }\r\n          habitat\r\n          game_indices {\r\n            version {\r\n              name\r\n            }\r\n          }\r\n          flavor_text_entries {\r\n            flavor_text\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allImageSharp {\r\n      nodes {\r\n        parent {\r\n          id\r\n          ... on File {\r\n            name\r\n          }\r\n        }\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    allPokemon {\r\n      nodes {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}